CREATE TABLE TipoDocumento (
  tpdId INT NOT NULL,
  tpdDescripcion VARCHAR2(20) NULL,
  PRIMARY KEY (tpdId));

CREATE SEQUENCE tpdid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tpdid BEFORE INSERT ON TipoDocumento  FOR EACH ROW
BEGIN   SELECT tpdid.NEXTVAL INTO :new.tpdid FROM DUAL; END;
/


CREATE TABLE Pais (
  pasId INT NOT NULL,
  pasDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (pasId));


CREATE SEQUENCE pasid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_pasid BEFORE INSERT ON pais  FOR EACH ROW
BEGIN   SELECT pasid.NEXTVAL INTO :new.pasid FROM DUAL; END;
/


CREATE TABLE Provincia (
  pvcId INT NOT NULL,
  pvcDescripcion VARCHAR2(45) NULL,
  pvc_pasId INT NULL,
  PRIMARY KEY (pvcId),
  CONSTRAINT fk_pvc_pais
    FOREIGN KEY (pvc_pasId)
    REFERENCES Pais (pasId)
);

CREATE SEQUENCE pvcid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_pvcid BEFORE INSERT ON provincia  FOR EACH ROW
BEGIN   SELECT pvcid.NEXTVAL INTO :new.pvcid FROM DUAL; END;
/


CREATE TABLE Localidad (
  locId INT NOT NULL,
  locDescripcion VARCHAR2(45) NULL,
  loc_pvcId INT NULL,
  PRIMARY KEY (locId),
  CONSTRAINT fk_loc_provincia
    FOREIGN KEY (loc_pvcId)
    REFERENCES Provincia (pvcId)
);


CREATE SEQUENCE locid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_locid BEFORE INSERT ON localidad  FOR EACH ROW
BEGIN   SELECT locid.NEXTVAL INTO :new.locid FROM DUAL; END;
/



CREATE TABLE Domicilio (
  domId INT NOT NULL,
  domCalle VARCHAR2(45) NULL,
  domNumero INT NULL,
  domPiso VARCHAR2(5) NULL,
  domDpto VARCHAR2(5) NULL,
  dom_locId INT NULL,
  PRIMARY KEY (domId),
  CONSTRAINT fk_dom_localidad
    FOREIGN KEY (dom_locId)
    REFERENCES Localidad (locId));


CREATE SEQUENCE domid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_domid BEFORE INSERT ON domicilio  FOR EACH ROW
BEGIN   SELECT domid.NEXTVAL INTO :new.domid FROM DUAL; END;
/



CREATE TABLE Persona (
  psnId INT NOT NULL,
  psnNroDcto INT NULL,
  psnNombre VARCHAR2(45) NULL,
  psnApellido VARCHAR2(45) NULL,
  psnFechaNac VARCHAR2(12) NULL,
  psnTelefono VARCHAR2(20) NULL,
  psnSexo VARCHAR2(1) NULL,
  psn_domId INT NULL,
  psn_tpdId INT NULL,
  PRIMARY KEY (psnId),
  CONSTRAINT fk_psn_tipoDocumento
    FOREIGN KEY (psn_tpdId)
    REFERENCES TipoDocumento (tpdId),
  CONSTRAINT fk_psn_domicilio
    FOREIGN KEY (psn_domId)
    REFERENCES Domicilio (domId)
);


CREATE SEQUENCE psnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_psnid BEFORE INSERT ON persona  FOR EACH ROW
BEGIN   SELECT psnid.NEXTVAL INTO :new.psnid FROM DUAL; END;
/


CREATE TABLE Ocupaciones(
  ocuId INT NOT NULL,
  ocuDescripcion VARCHAR2(45) NULL,
  ocuSedentaria varchar2(1) NULL,
  PRIMARY KEY (ocuId ));


CREATE SEQUENCE ocuid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_ocuid BEFORE INSERT ON ocupaciones FOR EACH ROW
BEGIN   SELECT ocuid.NEXTVAL INTO :new.ocuid FROM DUAL; END;
/


CREATE TABLE Paciente (
  paeId INT NOT NULL,
  paePeso NUMBER(3,3) NULL,
  paeAltura INT NULL,
  paeActFisica varchar2(1) NULL,
  paePeriodicidad INT NULL,
  pae_psnId INT NULL,
  PRIMARY KEY (paeId),
  CONSTRAINT fk_pae_persona
    FOREIGN KEY (pae_psnId)
    REFERENCES Persona (psnId));


CREATE SEQUENCE paeid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_paeid BEFORE INSERT ON paciente  FOR EACH ROW
BEGIN   SELECT paeid.NEXTVAL INTO :new.paeid FROM DUAL; END;
/


CREATE TABLE PacienteOcupaciones(
  opaId INT NOT NULL,
  opa_paeId INT NULL,
  opa_ocuId INT NULL,
  PRIMARY KEY (opaId),
  CONSTRAINT fk_opa_paciente
    FOREIGN KEY (opa_paeId)
    REFERENCES Paciente(paeId),
    CONSTRAINT fk_opa_ocupaciones
    FOREIGN KEY (opa_ocuId)
    REFERENCES Ocupaciones(ocuId));


CREATE SEQUENCE opaId
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_opaId BEFORE INSERT ON PacienteOcupaciones FOR EACH ROW
BEGIN   SELECT opaid.NEXTVAL INTO :new.opaid FROM DUAL; END;
/



CREATE TABLE Profesional (
  proId INT NULL,
  proMatricula INT NOT NULL,
  proTelefonoInterno VARCHAR2(20) NOT NULL,
  pro_psnId INT NULL,
  PRIMARY KEY (proId),
  CONSTRAINT fk_pro_persona
    FOREIGN KEY (pro_psnId)
    REFERENCES Persona (psnId));


CREATE SEQUENCE proid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_proid BEFORE INSERT ON profesional  FOR EACH ROW
BEGIN   SELECT proid.NEXTVAL INTO :new.proid FROM DUAL; END;
/

CREATE TABLE ObraSocial (
  osoId INT NULL,
  osoDescripcion VARCHAR2(45) NOT NULL,
  osoCoseguro NUMBER(6,2) NULL,
  osoContacto VARCHAR2(20) NULL,
  PRIMARY KEY (osoId));


CREATE SEQUENCE osoid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_osoid BEFORE INSERT ON obrasocial  FOR EACH ROW
BEGIN   SELECT osoid.NEXTVAL INTO :new.osoid FROM DUAL; END;
/



CREATE TABLE Tratamiento (
  traId INT NULL,
  traDescripcion VARCHAR2(45) NOT NULL,
  PRIMARY KEY (traId));


CREATE SEQUENCE traid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_traid BEFORE INSERT ON tratamiento  FOR EACH ROW
BEGIN   SELECT traid.NEXTVAL INTO :new.traid FROM DUAL; END;
/

CREATE TABLE ZonaCuerpo (
  zcuId INT NULL,
  zcuDescripcion VARCHAR2(45) NOT NULL,
  zcuNivel INT NULL,
  zcuIdPadre INT NULL,
  PRIMARY KEY (zcuId),
  CONSTRAINT fk_zcu_ZonaCuerpo
    FOREIGN KEY (zcuIdPadre)
    REFERENCES ZonaCuerpo (zcuId));


CREATE SEQUENCE zcuid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_zcuid BEFORE INSERT ON zonacuerpo  FOR EACH ROW
BEGIN   SELECT zcuid.NEXTVAL INTO :new.zcuid FROM DUAL; END;
/


CREATE TABLE AfeccionesTipos (
  tafId INT NULL,
  tafDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (tafId));


CREATE SEQUENCE tafid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tafid BEFORE INSERT ON afeccionestipos  FOR EACH ROW
BEGIN   SELECT tafid.NEXTVAL INTO :new.tafid FROM DUAL; END;
/

CREATE TABLE Afecciones (
  afnId INT NULL,
  afnDescripcion VARCHAR2(45) NULL,
  afn_tafId INT NULL,
  afn_zcuId INT NULL,
  PRIMARY KEY (afnId),
  CONSTRAINT fk_afn_tipo_afeccion
    FOREIGN KEY (afn_tafId)
    REFERENCES AfeccionesTipos (tafId),
  CONSTRAINT fk_afn_ZonaCuerpo
    FOREIGN KEY (afn_zcuId)
    REFERENCES ZonaCuerpo (zcuId));


CREATE SEQUENCE afnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_afnid BEFORE INSERT ON afecciones  FOR EACH ROW
BEGIN   SELECT afnid.NEXTVAL INTO :new.afnid FROM DUAL; END;
/


CREATE TABLE HistoriaClinica (
  hcaId INT NULL,
  hcaNroSesiones INT NULL,
  hcaFecha VARCHAR2(12) NULL,
  hca_afnId INT NULL,
  hca_paeId INT NULL,
  hcaCantEvaluaciones INT NULL,
  PRIMARY KEY (hcaId),
  CONSTRAINT fk_hca_Afecciones
    FOREIGN KEY (hca_afnId)
    REFERENCES Afecciones (afnId),
  CONSTRAINT fk_hca_Pacientes
    FOREIGN KEY (hca_paeId)
    REFERENCES Paciente (paeId));


CREATE SEQUENCE hcaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_hcaid BEFORE INSERT ON historiaclinica  FOR EACH ROW
BEGIN   SELECT hcaid.NEXTVAL INTO :new.hcaid FROM DUAL; END;
/



CREATE TABLE Sesion (
  sesId INT NULL,
  sesNumero INT NULL,
  sesObservacion VARCHAR2(500) NULL,
  sesFecha VARCHAR2(12) NULL,
  sesHoraInicio VARCHAR2(5) NULL,
  sesHoraFin VARCHAR2(5) NULL,
  sesUltima VARCHAR2(1) NULL,
  ses_hcaId INT NULL,
  PRIMARY KEY (sesId),
  CONSTRAINT fk_ses_Historia_Clinica
    FOREIGN KEY (ses_hcaId)
    REFERENCES HistoriaClinica (hcaId));


CREATE SEQUENCE sesid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_sesid BEFORE INSERT ON sesion  FOR EACH ROW
BEGIN   SELECT sesid.NEXTVAL INTO :new.sesid FROM DUAL; END;
/


CREATE TABLE SesionDetalle (
  desId INT NULL,
  desObservacion VARCHAR2(200) NULL,
  des_traId INT NULL,
  des_sesId INT NULL,
  dse_traId INT NULL,
  dse_afnId INT NULL,
  PRIMARY KEY (desId),
  CONSTRAINT fk_dse_Sesion
    FOREIGN KEY (des_sesId)
    REFERENCES Sesion (sesId),
  CONSTRAINT fk_dse_tratamientos
    FOREIGN KEY (dse_traId)
    REFERENCES Tratamiento (traId),
  CONSTRAINT fk_dse_Afecciones
    FOREIGN KEY (dse_afnId)
    REFERENCES Afecciones (afnId));


CREATE SEQUENCE desid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_desid BEFORE INSERT ON sesiondetalle  FOR EACH ROW
BEGIN   SELECT desid.NEXTVAL INTO :new.desid FROM DUAL; END;
/


CREATE TABLE AntecedenteMedico (
  ameId INT NULL,
  ameDescripcion VARCHAR2(45) NOT NULL,
  PRIMARY KEY (ameId));


CREATE SEQUENCE ameid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_ameid BEFORE INSERT ON antecedentemedico  FOR EACH ROW
BEGIN   SELECT ameid.NEXTVAL INTO :new.ameid FROM DUAL; END;
/


CREATE TABLE PacienteAntecedentes(
  apaId INT NOT NULL,
  apa_paeId INT NULL,
  apa_ameId INT NULL,
  PRIMARY KEY (apaId),
  CONSTRAINT fk_apa_antecedentes_medicos
    FOREIGN KEY (apa_ameId)
    REFERENCES AntecedenteMedico (ameId),
  CONSTRAINT fk_apa_pacientes
    FOREIGN KEY (apa_paeId)
    REFERENCES Paciente (paeId));


CREATE SEQUENCE apaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_apaid BEFORE INSERT ON pacienteantecedentes  FOR EACH ROW
BEGIN   SELECT apaid.NEXTVAL INTO :new.apaid FROM DUAL; END;
/


CREATE TABLE PacienteOs (
  ospId INT NOT NULL,
  osp_paeId INT NULL,
  osp_osoId INT NULL,
  PRIMARY KEY (ospId),
  CONSTRAINT fk_hca_Paciente
    FOREIGN KEY (osp_paeId)
    REFERENCES Paciente (paeId),
  CONSTRAINT fk_osp_obraSocial
    FOREIGN KEY (osp_osoId)
    REFERENCES ObraSocial (osoId));


CREATE SEQUENCE ospid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_ospid BEFORE INSERT ON pacienteos  FOR EACH ROW
BEGIN   SELECT ospid.NEXTVAL INTO :new.ospid FROM DUAL; END;
/


CREATE TABLE Dia (
  diaId INT NOT NULL,
  diaDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (diaId));


CREATE SEQUENCE diaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_diaid BEFORE INSERT ON dia  FOR EACH ROW
BEGIN   SELECT diaid.NEXTVAL INTO :new.diaid FROM DUAL; END;
/


CREATE TABLE Agenda (
  ageId INT NOT NULL,
  ageHoraDesde DATE NULL, -- DATETIME, VARCHAR2 O DATE???
  ageHoraHasta DATE NULL, -- DATETIME, VARCHAR2 O DATE???
  age_proId INT NULL,
  age_diaId INT NULL,
  PRIMARY KEY (ageId),
  CONSTRAINT fk_age_dia
    FOREIGN KEY (age_diaId)
    REFERENCES Dia (diaId),
  CONSTRAINT fk_age_profesional
    FOREIGN KEY (age_proId)
    REFERENCES Profesional (proId));


CREATE SEQUENCE ageid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_ageid BEFORE INSERT ON agenda  FOR EACH ROW
BEGIN   SELECT ageid.NEXTVAL INTO :new.ageid FROM DUAL; END;
/



CREATE TABLE TipoDia (
  tdaId INT NOT NULL,
  tdaDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (tdaId));


CREATE SEQUENCE tdaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tdaid BEFORE INSERT ON Tipodia  FOR EACH ROW
BEGIN   SELECT tdaid.NEXTVAL INTO :new.tdaid FROM DUAL; END;
/


CREATE TABLE DiaAtencion (
  datId INT NOT NULL,
  dat_tdaId INT NULL,
  PRIMARY KEY (datId),
  CONSTRAINT fk_dat_TipoDia
    FOREIGN KEY (dat_tdaId)
    REFERENCES TipoDia (tdaId)
    );

CREATE SEQUENCE datid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_datid BEFORE INSERT ON diaatencion FOR EACH ROW
BEGIN   SELECT datid.NEXTVAL INTO :new.datid FROM DUAL; END;
/



CREATE TABLE Estado (
  estId INT NOT NULL,
  estDescripcion VARCHAR2(45) NULL,
  estColor VARCHAR2(45) NULL, -- PODRIAN SER 3 VARIABLES R,G,B Y EN BASE A ESTO PODER DAR DINAMICAMENTE LOS COLORES.
  PRIMARY KEY (estId));


CREATE SEQUENCE estid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_estid BEFORE INSERT ON estado  FOR EACH ROW
BEGIN   SELECT estid.NEXTVAL INTO :new.estid FROM DUAL; END;
/


CREATE TABLE Turno (
  trnId INT NOT NULL,
  trnFecha VARCHAR2(12) NULL,
  trnHora VARCHAR2(5) NULL,
  trnMontoCobrado NUMBER(6,2) NULL, 
  trn_estId INT NULL,
  trn_proId INT NULL,
  trn_sesId INT NULL,
  trn_paeId INT NULL,
  trn_datId INT NULL,
  trn_ospId INT NULL,
  PRIMARY KEY (trnId),
  CONSTRAINT fk_trn_profesional
    FOREIGN KEY (trn_proId)
    REFERENCES Profesional (proId),
  CONSTRAINT fk_trn_paciente
    FOREIGN KEY (trn_paeId)
    REFERENCES Paciente (paeId),
  CONSTRAINT fk_trn_sesion
    FOREIGN KEY (trn_sesId)
    REFERENCES Sesion (sesId),
  CONSTRAINT fk_trn_estado
    FOREIGN KEY (trn_estId)
    REFERENCES Estado (estId),
  CONSTRAINT fk_trn_DiaAtencion
    FOREIGN KEY (trn_datId)
    REFERENCES DiaAtencion (datId),
  CONSTRAINT fk_trn_PacienteOs
    FOREIGN KEY (trn_ospId)
    REFERENCES PacienteOs (ospId));


CREATE SEQUENCE trnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_trnid BEFORE INSERT ON turno  FOR EACH ROW
BEGIN   SELECT trnid.NEXTVAL INTO :new.trnid FROM DUAL; END;
/



CREATE TABLE Vacaciones (
  vacId INT NOT NULL,
  vacFechaDesde VARCHAR2(12) NULL,
  vacFechaHasta VARCHAR2(12) NULL,
  vac_proId INT NULL,
  PRIMARY KEY (vacId),
  CONSTRAINT fk_vac_Profesional
    FOREIGN KEY (vac_proId)
    REFERENCES Profesional (proId));

CREATE SEQUENCE vacid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_vacid BEFORE INSERT ON vacaciones  FOR EACH ROW
BEGIN   SELECT vacid.NEXTVAL INTO :new.vacid FROM DUAL; END;
/



CREATE TABLE TestTipo (
  tptId INT NULL,
  tptDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (tptId));


CREATE SEQUENCE tptid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tptid BEFORE INSERT ON testtipo  FOR EACH ROW
BEGIN   SELECT tptid.NEXTVAL INTO :new.tptid FROM DUAL; END;
/



CREATE TABLE Test (
  tstId INT NULL,
  tstObservacion VARCHAR2(45) NULL,
  tst_zcuId INT NULL,
  tst_tptId INT NULL,
  PRIMARY KEY (tstId),
  CONSTRAINT fk_tst_ZonaCuerpo
    FOREIGN KEY (tst_zcuId)
    REFERENCES ZonaCuerpo (zcuId),
  CONSTRAINT fk_tst_TestTipo
    FOREIGN KEY (tst_tptId)
    REFERENCES TestTipo (tptId));


CREATE SEQUENCE tstid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tstid BEFORE INSERT ON test  FOR EACH ROW
BEGIN   SELECT tstid.NEXTVAL INTO :new.tstid FROM DUAL; END;
/



CREATE TABLE TestDetalle (
  detId INT NULL,
  det_tstId INT NULL,
  PRIMARY KEY (detId),
  CONSTRAINT fk_det_Test
    FOREIGN KEY (det_tstId)
    REFERENCES Test (tstId));


CREATE SEQUENCE detid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_detid BEFORE INSERT ON testdetalle  FOR EACH ROW
BEGIN   SELECT detid.NEXTVAL INTO :new.detid FROM DUAL; END;
/

CREATE TABLE AfeccionesTratamientos(
  atsId INT NULL,
  ats_traId INT NULL,
  ats_afnId INT NULL,
  PRIMARY KEY (atsId),
  CONSTRAINT fk_atr_Afecciones
    FOREIGN KEY (ats_afnId)
    REFERENCES Afecciones (afnId),
    CONSTRAINT fk_atr_Tratamientos
    FOREIGN KEY (ats_traId)
    REFERENCES Tratamiento (traId)
);


CREATE SEQUENCE atsId
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_atsid BEFORE INSERT ON AfeccionesTratamientos FOR EACH ROW
BEGIN   SELECT atsid.NEXTVAL INTO :new.atsid FROM DUAL; END;
/