CREATE TABLE TipoDocumento (
  tpdId INT NOT NULL,
  tpdDescripcion VARCHAR2(20) NULL,
  PRIMARY KEY (tpdId));

CREATE SEQUENCE tpdid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tpdid BEFORE INSERT ON TipoDocumento  FOR EACH ROW
BEGIN   SELECT tpdid.NEXTVAL INTO :new.tpdid FROM DUAL; END;
/


CREATE TABLE Pais (
  pasId INT NOT NULL,
  pasDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (pasId));


CREATE SEQUENCE pasid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_pasid BEFORE INSERT ON pais  FOR EACH ROW
BEGIN   SELECT pasid.NEXTVAL INTO :new.pasid FROM DUAL; END;
/


CREATE TABLE Provincia (
  pvcId INT NOT NULL,
  pvcDescripcion VARCHAR2(45) NULL,
  pvc_pasId INT NULL,
  PRIMARY KEY (pvcId),
  CONSTRAINT fk_pvc_pais
    FOREIGN KEY (pvc_pasId)
    REFERENCES Pais (pasId)
);

CREATE SEQUENCE pvcid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_pvcid BEFORE INSERT ON provincia  FOR EACH ROW
BEGIN   SELECT pvcid.NEXTVAL INTO :new.pvcid FROM DUAL; END;
/


CREATE TABLE Localidad (
  locId INT NOT NULL,
  locDescripcion VARCHAR2(45) NULL,
  loc_pvcId INT NULL,
  PRIMARY KEY (locId),
  CONSTRAINT fk_loc_provincia
    FOREIGN KEY (loc_pvcId)
    REFERENCES Provincia (pvcId)
);


CREATE SEQUENCE locid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_locid BEFORE INSERT ON localidad  FOR EACH ROW
BEGIN   SELECT locid.NEXTVAL INTO :new.locid FROM DUAL; END;
/



CREATE TABLE FISIKS.DOMICILIO
(
  DOMID           INTEGER                       NOT NULL,
  DOMCALLE        VARCHAR2(45 BYTE),
  DOMNUMERO       INTEGER,
  DOMPISO         VARCHAR2(5 BYTE),
  DOMDPTO         VARCHAR2(5 BYTE),
  DOM_LOCID       INTEGER,
  DOMDESCRIPCION  VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE domid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER FISIKS.trg_domid BEFORE INSERT ON FISIKS.DOMICILIO  FOR EACH ROW
BEGIN   SELECT domid.NEXTVAL INTO :new.domid FROM DUAL; END;
/


ALTER TABLE FISIKS.DOMICILIO ADD (
  PRIMARY KEY
 (DOMID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.DOMICILIO ADD (
  CONSTRAINT FK_DOM_LOCALIDAD 
 FOREIGN KEY (DOM_LOCID) 
 REFERENCES FISIKS.LOCALIDAD (LOCID));



CREATE TABLE FISIKS.PERSONA
(
  PSNID        INTEGER                          NOT NULL,
  PSNNRODCTO   VARCHAR2(9 BYTE),
  PSNNOMBRE    VARCHAR2(45 BYTE),
  PSNAPELLIDO  VARCHAR2(45 BYTE),
  PSNFECHANAC  VARCHAR2(12 BYTE),
  PSNTELEFONO  VARCHAR2(20 BYTE),
  PSNSEXO      VARCHAR2(1 BYTE),
  PSNDOMICILIO VARCHAR2 (45 BYTES);
  PSN_DOMID    INTEGER,
  PSN_TPDID    INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE psnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_psnid BEFORE INSERT ON FISIKS.PERSONA  FOR EACH ROW
BEGIN   SELECT psnid.NEXTVAL INTO :new.psnid FROM DUAL; END;
/


ALTER TABLE FISIKS.PERSONA ADD (
  PRIMARY KEY
 (PSNID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PERSONA ADD (
  CONSTRAINT FK_PSN_DOMICILIO 
 FOREIGN KEY (PSN_DOMID) 
 REFERENCES FISIKS.DOMICILIO (DOMID),
  CONSTRAINT FK_PSN_TIPODOCUMENTO 
 FOREIGN KEY (PSN_TPDID) 
 REFERENCES FISIKS.TIPODOCUMENTO (TPDID));




CREATE TABLE FISIKS.OCUPACIONES
(
  OCUID           INTEGER                       NOT NULL,
  OCUDESCRIPCION  VARCHAR2(45 BYTE),
  OCU_OPTID       INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE ocuid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER FISIKS.trg_ocuid BEFORE INSERT ON FISIKS.OCUPACIONES FOR EACH ROW
BEGIN   SELECT ocuid.NEXTVAL INTO :new.ocuid FROM DUAL; END;
/


ALTER TABLE FISIKS.OCUPACIONES ADD (
  PRIMARY KEY
 (OCUID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0






CREATE TABLE FISIKS.PACIENTE
(
  PAEID            INTEGER                      NOT NULL,
  PAEPESO          NUMBER(3,3),
  PAEALTURA        INTEGER,
  PAEACTFISICA     VARCHAR2(1 BYTE),
  PAEPERIODICIDAD  INTEGER,
  PAETENSIONMIN    INTEGER,
  PAETENSIONMAX    INTEGER,
  PAE_PSNID        INTEGER,
  PAE_OCUID        INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE SEQUENCE paeid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER FISIKS.trg_paeid BEFORE INSERT ON FISIKS.PACIENTE  FOR EACH ROW
BEGIN   SELECT paeid.NEXTVAL INTO :new.paeid FROM DUAL; END;
/


ALTER TABLE FISIKS.PACIENTE ADD (
  PRIMARY KEY
 (PAEID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PACIENTE ADD (
  CONSTRAINT FK_PAE_OCUPACIONES 
 FOREIGN KEY (PAE_OCUID) 
 REFERENCES FISIKS.OCUPACIONES (OCUID),
  CONSTRAINT FK_PAE_PERSONA 
 FOREIGN KEY (PAE_PSNID) 
 REFERENCES FISIKS.PERSONA (PSNID));

CREATE TABLE FISIKS.PACIENTEOCUPACIONES
(
  OPAID      INTEGER                            NOT NULL,
  OPA_PAEID  INTEGER,
  OPA_OCUID  INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE opaId
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_opaId BEFORE INSERT ON FISIKS.PACIENTEOCUPACIONES FOR EACH ROW
BEGIN   SELECT opaid.NEXTVAL INTO :new.opaid FROM DUAL; END;
/


ALTER TABLE FISIKS.PACIENTEOCUPACIONES ADD (
  PRIMARY KEY
 (OPAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PACIENTEOCUPACIONES ADD (
  CONSTRAINT FK_OPA_OCUPACIONES 
 FOREIGN KEY (OPA_OCUID) 
 REFERENCES FISIKS.OCUPACIONES (OCUID),
  CONSTRAINT FK_OPA_PACIENTE 
 FOREIGN KEY (OPA_PAEID) 
 REFERENCES FISIKS.PACIENTE (PAEID));





CREATE TABLE FISIKS.PROFESIONAL
(
  PROID               INTEGER,
  PROTELEFONOINTERNO  VARCHAR2(20 BYTE)         NOT NULL,
  PRO_PSNID           INTEGER,
  PROACTIVO           VARCHAR2(1 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE proid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_proid BEFORE INSERT ON FISIKS.PROFESIONAL  FOR EACH ROW
BEGIN   SELECT proid.NEXTVAL INTO :new.proid FROM DUAL; END;
/


ALTER TABLE FISIKS.PROFESIONAL ADD (
  PRIMARY KEY
 (PROID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PROFESIONAL ADD (
  CONSTRAINT FK_PRO_PERSONA 
 FOREIGN KEY (PRO_PSNID) 
 REFERENCES FISIKS.PERSONA (PSNID));



CREATE TABLE FISIKS.OBRASOCIAL
(
  OSOID           INTEGER,
  OSODESCRIPCION  VARCHAR2(4000 BYTE)             NOT NULL,
  OSOCOSEGURO     NUMBER(6,2),
  OSOCONTACTO     VARCHAR2(20 BYTE),
  OSOSIGLA        VARCHAR2(20 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE osoid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_osoid BEFORE INSERT ON FISIKS.OBRASOCIAL  FOR EACH ROW
BEGIN   SELECT osoid.NEXTVAL INTO :new.osoid FROM DUAL; END;
/


ALTER TABLE FISIKS.OBRASOCIAL ADD (
  PRIMARY KEY
 (OSOID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));




CREATE TABLE FISIKS.TRATAMIENTO
(
  TRAID           INTEGER,
  TRADESCRIPCION  VARCHAR2(45 BYTE)             NOT NULL
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE SEQUENCE traid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_traid BEFORE INSERT ON FISIKS.TRATAMIENTO  FOR EACH ROW
BEGIN   SELECT traid.NEXTVAL INTO :new.traid FROM DUAL; END;
/


ALTER TABLE FISIKS.TRATAMIENTO ADD (
  PRIMARY KEY
 (TRAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));



CREATE TABLE FISIKS.ZONACUERPO
(
  ZCUID           INTEGER,
  ZCUDESCRIPCION  VARCHAR2(45 BYTE)             NOT NULL,
  ZCUNIVEL        INTEGER,
  ZCUIDPADRE      INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE zcuid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_zcuid BEFORE INSERT ON FISIKS.ZONACUERPO  FOR EACH ROW
BEGIN   SELECT zcuid.NEXTVAL INTO :new.zcuid FROM DUAL; END;
/


ALTER TABLE FISIKS.ZONACUERPO ADD (
  PRIMARY KEY
 (ZCUID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.ZONACUERPO ADD (
  CONSTRAINT FK_ZCU_ZONACUERPO 
 FOREIGN KEY (ZCUIDPADRE) 
 REFERENCES FISIKS.ZONACUERPO (ZCUID));




CREATE TABLE AfeccionesTipos (
  tafId INT NULL,
  tafDescripcion VARCHAR2(45) NULL,
  PRIMARY KEY (tafId));


CREATE SEQUENCE tafid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_tafid BEFORE INSERT ON afeccionestipos  FOR EACH ROW
BEGIN   SELECT tafid.NEXTVAL INTO :new.tafid FROM DUAL; END;
/

CREATE TABLE Afecciones (
  afnId INT NULL,
  afnDescripcion VARCHAR2(45) NULL,
  afn_tafId INT NULL,
  afn_zcuId INT NULL,
  PRIMARY KEY (afnId),
  CONSTRAINT fk_afn_tipo_afeccion
    FOREIGN KEY (afn_tafId)
    REFERENCES AfeccionesTipos (tafId),
  CONSTRAINT fk_afn_ZonaCuerpo
    FOREIGN KEY (afn_zcuId)
    REFERENCES ZonaCuerpo (zcuId));


CREATE SEQUENCE afnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_afnid BEFORE INSERT ON afecciones  FOR EACH ROW
BEGIN   SELECT afnid.NEXTVAL INTO :new.afnid FROM DUAL; END;
/


CREATE TABLE FISIKS.HISTORIACLINICA
(
  HCAID                INTEGER,
  HCANROSESIONES       INTEGER,
  HCAFECHA             VARCHAR2(12 BYTE),
  HCA_AFNID            INTEGER,
  HCA_PAEID            INTEGER,
  HCACANTEVALUACIONES  INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE hcaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;



CREATE OR REPLACE TRIGGER FISIKS.trg_hcaid BEFORE INSERT ON FISIKS.HISTORIACLINICA  FOR EACH ROW
BEGIN   SELECT hcaid.NEXTVAL INTO :new.hcaid FROM DUAL; END;
/


ALTER TABLE FISIKS.HISTORIACLINICA ADD (
  PRIMARY KEY
 (HCAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.HISTORIACLINICA ADD (
  CONSTRAINT FK_HCA_AFECCIONES 
 FOREIGN KEY (HCA_AFNID) 
 REFERENCES FISIKS.AFECCIONES (AFNID),
  CONSTRAINT FK_HCA_PACIENTES 
 FOREIGN KEY (HCA_PAEID) 
 REFERENCES FISIKS.PACIENTE (PAEID));



CREATE TABLE FISIKS.SESION
(
  SESID           INTEGER,
  SESNUMERO       INTEGER,
  SESOBSERVACION  VARCHAR2(500 BYTE),
  SESFECHA        VARCHAR2(12 BYTE),
  SESHORAINICIO   VARCHAR2(5 BYTE),
  SESHORAFIN      VARCHAR2(5 BYTE),
  SESULTIMA       VARCHAR2(1 BYTE),
  SES_HCAID       INTEGER,
  SES_TSTID       INTEGER,
  SES_PROID       INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE sesid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_sesid BEFORE INSERT ON FISIKS.SESION  FOR EACH ROW
BEGIN   SELECT sesid.NEXTVAL INTO :new.sesid FROM DUAL; END;
/


ALTER TABLE FISIKS.SESION ADD (
  PRIMARY KEY
 (SESID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.SESION ADD (
  CONSTRAINT FK_SES_HISTORIA_CLINICA 
 FOREIGN KEY (SES_HCAID) 
 REFERENCES FISIKS.HISTORIACLINICA (HCAID),
  CONSTRAINT FK_SES_PROFESIONAL 
 FOREIGN KEY (SES_PROID) 
 REFERENCES FISIKS.PROFESIONAL (PROID),
  CONSTRAINT FK_SES_TEST 
 FOREIGN KEY (SES_TSTID) 
 REFERENCES FISIKS.TEST (TSTID));



CREATE TABLE FISIKS.SESIONDETALLE
(
  DESID           INTEGER,
  DESOBSERVACION  VARCHAR2(200 BYTE),
  DES_TRAID       INTEGER,
  DES_SESID       INTEGER,
  DSE_AFNID       INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE desid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;



CREATE OR REPLACE TRIGGER FISIKS.trg_desid BEFORE INSERT ON FISIKS.SESIONDETALLE  FOR EACH ROW
BEGIN   SELECT desid.NEXTVAL INTO :new.desid FROM DUAL; END;
/


ALTER TABLE FISIKS.SESIONDETALLE ADD (
  PRIMARY KEY
 (DESID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.SESIONDETALLE ADD (
  CONSTRAINT FK_DSE_AFECCIONES 
 FOREIGN KEY (DSE_AFNID) 
 REFERENCES FISIKS.AFECCIONES (AFNID),
  CONSTRAINT FK_DSE_SESION 
 FOREIGN KEY (DES_SESID) 
 REFERENCES FISIKS.SESION (SESID));




CREATE TABLE FISIKS.ANTECEDENTEMEDICO
(
  AMEID           INTEGER,
  AMEDESCRIPCION  VARCHAR2(45 BYTE)             NOT NULL
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE ameid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_ameid BEFORE INSERT ON FISIKS.ANTECEDENTEMEDICO  FOR EACH ROW
BEGIN   SELECT ameid.NEXTVAL INTO :new.ameid FROM DUAL; END;
/


ALTER TABLE FISIKS.ANTECEDENTEMEDICO ADD (
  PRIMARY KEY
 (AMEID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));




CREATE TABLE FISIKS.PACIENTEANTECEDENTES
(
  APAID           INTEGER                       NOT NULL,
  APA_PAEID       INTEGER,
  APA_AMEID       INTEGER,
  APAOBSERVACION  VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE apaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_apaid BEFORE INSERT ON FISIKS.PACIENTEANTECEDENTES  FOR EACH ROW
BEGIN   SELECT apaid.NEXTVAL INTO :new.apaid FROM DUAL; END;
/


ALTER TABLE FISIKS.PACIENTEANTECEDENTES ADD (
  PRIMARY KEY
 (APAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PACIENTEANTECEDENTES ADD (
  CONSTRAINT FK_APA_ANTECEDENTES_MEDICOS 
 FOREIGN KEY (APA_AMEID) 
 REFERENCES FISIKS.ANTECEDENTEMEDICO (AMEID),
  CONSTRAINT FK_APA_PACIENTES 
 FOREIGN KEY (APA_PAEID) 
 REFERENCES FISIKS.PACIENTE (PAEID));




CREATE TABLE FISIKS.PACIENTEOS
(
  OSPID        INTEGER                          NOT NULL,
  OSP_PAEID    INTEGER,
  OSP_OSOID    INTEGER,
  OSPNROSOCIO  INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE ospid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_ospid BEFORE INSERT ON FISIKS.PACIENTEOS  FOR EACH ROW
BEGIN   SELECT ospid.NEXTVAL INTO :new.ospid FROM DUAL; END;
/


ALTER TABLE FISIKS.PACIENTEOS ADD (
  PRIMARY KEY
 (OSPID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PACIENTEOS ADD (
  CONSTRAINT FK_HCA_PACIENTE 
 FOREIGN KEY (OSP_PAEID) 
 REFERENCES FISIKS.PACIENTE (PAEID),
  CONSTRAINT FK_OSP_OBRASOCIAL 
 FOREIGN KEY (OSP_OSOID) 
 REFERENCES FISIKS.OBRASOCIAL (OSOID));




CREATE TABLE FISIKS.DIA
(
  DIAID           INTEGER                       NOT NULL,
  DIADESCRIPCION  VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE diaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;



CREATE OR REPLACE TRIGGER FISIKS.trg_diaid BEFORE INSERT ON FISIKS.DIA  FOR EACH ROW
BEGIN   SELECT diaid.NEXTVAL INTO :new.diaid FROM DUAL; END;
/


ALTER TABLE FISIKS.DIA ADD (
  PRIMARY KEY
 (DIAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));




CREATE TABLE FISIKS.AGENDA
(
  AGEID         INTEGER                         NOT NULL,
  AGEHORADESDE  DATE,
  AGEHORAHASTA  DATE,
  AGE_PROID     INTEGER,
  AGE_DIAID     INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE ageid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_ageid BEFORE INSERT ON FISIKS.AGENDA  FOR EACH ROW
BEGIN   SELECT ageid.NEXTVAL INTO :new.ageid FROM DUAL; END;
/


ALTER TABLE FISIKS.AGENDA ADD (
  PRIMARY KEY
 (AGEID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.AGENDA ADD (
  CONSTRAINT FK_AGE_DIA 
 FOREIGN KEY (AGE_DIAID) 
 REFERENCES FISIKS.DIA (DIAID),
  CONSTRAINT FK_AGE_PROFESIONAL 
 FOREIGN KEY (AGE_PROID) 
 REFERENCES FISIKS.PROFESIONAL (PROID));




CREATE TABLE FISIKS.DIATIPO
(
  TDAID           INTEGER                       NOT NULL,
  TDADESCRIPCION  VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE tdaid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_tdaid BEFORE INSERT ON FISIKS.DIATIPO  FOR EACH ROW
BEGIN   SELECT tdaid.NEXTVAL INTO :new.tdaid FROM DUAL; END;
/


ALTER TABLE FISIKS.DIATIPO ADD (
  PRIMARY KEY
 (TDAID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));




CREATE TABLE FISIKS.DIAATENCION
(
  DATID      INTEGER                            NOT NULL,
  DAT_TDAID  INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE datid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_datid BEFORE INSERT ON FISIKS.DIAATENCION FOR EACH ROW
BEGIN   SELECT datid.NEXTVAL INTO :new.datid FROM DUAL; END;
/


ALTER TABLE FISIKS.DIAATENCION ADD (
  PRIMARY KEY
 (DATID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));





CREATE TABLE FISIKS.ESTADO
(
  ESTID           INTEGER                       NOT NULL,
  ESTDESCRIPCION  VARCHAR2(45 BYTE),
  ESTCOLOR        VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE estid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;



CREATE OR REPLACE TRIGGER FISIKS.trg_estid BEFORE INSERT ON FISIKS.ESTADO  FOR EACH ROW
BEGIN   SELECT estid.NEXTVAL INTO :new.estid FROM DUAL; END;
/


ALTER TABLE FISIKS.ESTADO ADD (
  PRIMARY KEY
 (ESTID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));



CREATE TABLE FISIKS.TURNO
(
  TRNID            INTEGER                      NOT NULL,
  TRNFECHA         VARCHAR2(12 BYTE),
  TRNHORA          VARCHAR2(5 BYTE),
  TRNMONTOCOBRADO  NUMBER(6,2),
  TRN_ESTID        INTEGER,
  TRN_PROID        INTEGER,
  TRN_SESID        INTEGER,
  TRN_PAEID        INTEGER,
  TRN_DATID        INTEGER,
  TRN_OSPID        INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE trnid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_trnid BEFORE INSERT ON FISIKS.TURNO  FOR EACH ROW
BEGIN   SELECT trnid.NEXTVAL INTO :new.trnid FROM DUAL; END;
/


ALTER TABLE FISIKS.TURNO ADD (
  PRIMARY KEY
 (TRNID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.TURNO ADD (
  CONSTRAINT FK_TRN_DIAATENCION 
 FOREIGN KEY (TRN_DATID) 
 REFERENCES FISIKS.DIAATENCION (DATID),
  CONSTRAINT FK_TRN_ESTADO 
 FOREIGN KEY (TRN_ESTID) 
 REFERENCES FISIKS.ESTADO (ESTID),
  CONSTRAINT FK_TRN_PACIENTE 
 FOREIGN KEY (TRN_PAEID) 
 REFERENCES FISIKS.PACIENTE (PAEID),
  CONSTRAINT FK_TRN_PACIENTEOS 
 FOREIGN KEY (TRN_OSPID) 
 REFERENCES FISIKS.PACIENTEOS (OSPID),
  CONSTRAINT FK_TRN_PROFESIONAL 
 FOREIGN KEY (TRN_PROID) 
 REFERENCES FISIKS.PROFESIONAL (PROID),
  CONSTRAINT FK_TRN_SESION 
 FOREIGN KEY (TRN_SESID) 
 REFERENCES FISIKS.SESION (SESID));



CREATE TABLE TURNERO
(
  turId           INTEGER NOT NULL,
  turTitulo       VARCHAR2(45) NULL,
  turDescripcion  VARCHAR2(255) NULL,
  turFechaIni     DATE NULL,
  turFechaFin     DATE NULL,
  turTodoDia      CHAR(1) NULL,
  tur_paeId       INTEGER NULL,
  tur_proId       INTEGER NULL,
  PRIMARY KEY (turId)
);

CREATE SEQUENCE turId
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_turId BEFORE INSERT ON TURNERO  FOR EACH ROW
BEGIN   SELECT turId.NEXTVAL INTO :NEW.turId FROM DUAL; END;
/




CREATE TABLE FISIKS.VACACIONES
(
  VACID          INTEGER                        NOT NULL,
  VACFECHADESDE  VARCHAR2(12 BYTE),
  VACFECHAHASTA  VARCHAR2(12 BYTE),
  VAC_PROID      INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE vacid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_vacid BEFORE INSERT ON FISIKS.VACACIONES  FOR EACH ROW
BEGIN   SELECT vacid.NEXTVAL INTO :new.vacid FROM DUAL; END;
/


ALTER TABLE FISIKS.VACACIONES ADD (
  PRIMARY KEY
 (VACID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.VACACIONES ADD (
  CONSTRAINT FK_VAC_PROFESIONAL 
 FOREIGN KEY (VAC_PROID) 
 REFERENCES FISIKS.PROFESIONAL (PROID));




CREATE TABLE FISIKS.TESTTIPO
(
  TPTID           INTEGER,
  TPTDESCRIPCION  VARCHAR2(45 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE SEQUENCE tptid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;



CREATE OR REPLACE TRIGGER FISIKS.trg_tptid BEFORE INSERT ON FISIKS.TESTTIPO  FOR EACH ROW
BEGIN   SELECT tptid.NEXTVAL INTO :new.tptid FROM DUAL; END;
/


ALTER TABLE FISIKS.TESTTIPO ADD (
  PRIMARY KEY
 (TPTID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));




CREATE TABLE FISIKS.TEST
(
  TSTID           INTEGER,
  TSTOBSERVACION  VARCHAR2(45 BYTE),
  TST_ZCUID       INTEGER,
  TST_TPTID       INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;

CREATE SEQUENCE tstid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_tstid BEFORE INSERT ON FISIKS.TEST  FOR EACH ROW
BEGIN   SELECT tstid.NEXTVAL INTO :new.tstid FROM DUAL; END;
/


ALTER TABLE FISIKS.TEST ADD (
  PRIMARY KEY
 (TSTID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.TEST ADD (
  CONSTRAINT FK_TST_TESTTIPO 
 FOREIGN KEY (TST_TPTID) 
 REFERENCES FISIKS.TESTTIPO (TPTID),
  CONSTRAINT FK_TST_ZONACUERPO 
 FOREIGN KEY (TST_ZCUID) 
 REFERENCES FISIKS.ZONACUERPO (ZCUID));




CREATE TABLE FISIKS.TESTDETALLE
(
  DETID      INTEGER,
  DET_TSTID  INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE SEQUENCE detid
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;


CREATE OR REPLACE TRIGGER FISIKS.trg_detid BEFORE INSERT ON FISIKS.TESTDETALLE  FOR EACH ROW
BEGIN   SELECT detid.NEXTVAL INTO :new.detid FROM DUAL; END;
/


ALTER TABLE FISIKS.TESTDETALLE ADD (
  PRIMARY KEY
 (DETID)
    USING INDEX 
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.TESTDETALLE ADD (
  CONSTRAINT FK_DET_TEST 
 FOREIGN KEY (DET_TSTID) 
 REFERENCES FISIKS.TEST (TSTID));



CREATE TABLE AfeccionesTratamientos(
  atsId INT NULL,
  ats_traId INT NULL,
  ats_afnId INT NULL,
  PRIMARY KEY (atsId),
  CONSTRAINT fk_atr_Afecciones
    FOREIGN KEY (ats_afnId)
    REFERENCES Afecciones (afnId),
    CONSTRAINT fk_atr_Tratamientos
    FOREIGN KEY (ats_traId)
    REFERENCES Tratamiento (traId)
);


CREATE SEQUENCE atsId
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER trg_atsid BEFORE INSERT ON AfeccionesTratamientos FOR EACH ROW
BEGIN   SELECT atsid.NEXTVAL INTO :new.atsid FROM DUAL; END;
/








