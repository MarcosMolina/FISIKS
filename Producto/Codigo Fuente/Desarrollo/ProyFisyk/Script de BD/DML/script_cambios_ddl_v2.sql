ALTER TABLE FISIKS.PACIENTE
 DROP PRIMARY KEY CASCADE;

DROP TABLE FISIKS.PACIENTE CASCADE CONSTRAINTS;

CREATE TABLE FISIKS.PACIENTE
(
  PAEID            INTEGER                      NOT NULL,
  PAEALTURA        INTEGER,
  PAEACTFISICA     VARCHAR2(1 BYTE),
  PAEPERIODICIDAD  INTEGER,
  PAE_PSNID        INTEGER,
  PAE_OCUID        INTEGER,
  PAEPESO          INTEGER,
  PAETENSIONMIN    INTEGER,
  PAETENSIONMAX    INTEGER
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


--  There is no statement for index FISIKS.SYS_C007158.
--  The object is created automatically by Oracle when the parent object is created.

CREATE OR REPLACE TRIGGER FISIKS.trg_paeid BEFORE INSERT ON FISIKS.PACIENTE  FOR EACH ROW
BEGIN   SELECT paeid.NEXTVAL INTO :new.paeid FROM DUAL; END;
/


ALTER TABLE FISIKS.PACIENTE ADD (
  PRIMARY KEY
  (PAEID)
  USING INDEX
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PACIENTE ADD (
  CONSTRAINT FK_PAE_PERSONA 
  FOREIGN KEY (PAE_PSNID) 
  REFERENCES FISIKS.PERSONA (PSNID));




ALTER TABLE FISIKS.PERSONA
 DROP PRIMARY KEY CASCADE;

DROP TABLE FISIKS.PERSONA CASCADE CONSTRAINTS;

CREATE TABLE FISIKS.PERSONA
(
  PSNID         INTEGER                         NOT NULL,
  PSNNRODCTO    VARCHAR2(9 BYTE),
  PSNNOMBRE     VARCHAR2(45 BYTE),
  PSNAPELLIDO   VARCHAR2(45 BYTE),
  PSNFECHANAC   VARCHAR2(12 BYTE),
  PSNTELEFONO   VARCHAR2(20 BYTE),
  PSNSEXO       VARCHAR2(1 BYTE),
  PSN_DOMID     INTEGER,
  PSN_TPDID     INTEGER,
  PSNDOMICILIO  VARCHAR2(50 BYTE)
)
TABLESPACE FISIKS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


--  There is no statement for index FISIKS.SYS_C007152.
--  The object is created automatically by Oracle when the parent object is created.

CREATE OR REPLACE TRIGGER FISIKS.trg_psnid BEFORE INSERT ON FISIKS.PERSONA  FOR EACH ROW
BEGIN   SELECT psnid.NEXTVAL INTO :new.psnid FROM DUAL; END;
/


ALTER TABLE FISIKS.PERSONA ADD (
  PRIMARY KEY
  (PSNID)
  USING INDEX
    TABLESPACE FISIKS_TBL
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));

ALTER TABLE FISIKS.PERSONA ADD (
  CONSTRAINT FK_PSN_DOMICILIO 
  FOREIGN KEY (PSN_DOMID) 
  REFERENCES FISIKS.DOMICILIO (DOMID),
  CONSTRAINT FK_PSN_TIPODOCUMENTO 
  FOREIGN KEY (PSN_TPDID) 
  REFERENCES FISIKS.TIPODOCUMENTO (TPDID));



DROP PROCEDURE FISIKS.PRC_ANTECEDENTESMEDICOS_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_ANTECEDENTESMEDICOS_SELECT(
    oCursorAteMed   OUT sys_refcursor)

AS
BEGIN
    
    OPEN oCursorAteMed FOR SELECT * FROM ANTECEDENTEMEDICO ;

END;
/


DROP PROCEDURE FISIKS.PRC_OBRASOCIALES_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_OBRASOCIALES_SELECT(
    oCursorOSocial   OUT sys_refcursor)

AS
BEGIN
    
    OPEN oCursorOSocial FOR SELECT * FROM OBRASOCIAL ;

END;
/


DROP PROCEDURE FISIKS.PRC_OCUPACIONES_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_OCUPACIONES_SELECT(
    oCursorOcupaciones   OUT sys_refcursor)

AS
BEGIN
    
    OPEN oCursorOcupaciones FOR SELECT * FROM OCUPACIONES ORDER BY 1;

END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTE_INSERT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTE_INSERT (
    iPAEPESO                IN PACIENTE.PAEPESO%TYPE :=NULL,
    iPAEALTURA            IN PACIENTE.PAEALTURA%TYPE := NULL,
    iPAETENSIONMAX    IN PACIENTE.PAETENSIONMAX%TYPE :=NULL,
    iPAETENSIONMIN     IN PACIENTE.PAETENSIONMIN%TYPE :=NULL,
    iPAEACTFISICA        IN PACIENTE.PAEACTFISICA%TYPE := NULL,
    iPAEPERIODICIDAD   IN PACIENTE.PAEPERIODICIDAD%TYPE := NULL,
    iPAE_OCUID             IN PACIENTE.PAE_OCUID %TYPE := NULL,
    iPAE_PSNID             IN PACIENTE.PAE_PSNID%TYPE,--No puede ser null --> relacion con PERSONA
    oPAEID                   OUT NUMBER)
AS
BEGIN
           
        INSERT INTO PACIENTE
            (PAEPESO,
            PAEALTURA,
            PAETENSIONMAX,
            PAETENSIONMIN,
            PAEACTFISICA,
            PAEPERIODICIDAD,
            PAE_OCUID,
            PAE_PSNID)
        VALUES
            (iPAEPESO,
            iPAEALTURA,
            iPAETENSIONMAX,
            iPAETENSIONMIN,
            iPAEACTFISICA,
            iPAEPERIODICIDAD,
            iPAE_OCUID,
            iPAE_PSNID)
        RETURNING PAEID INTO oPAEID;
        
END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTEOCUPACIONES_INSERT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTEOCUPACIONES_INSERT (
    iOPA_PAEID            IN PACIENTEOCUPACIONES.OPA_PAEID%TYPE :=NULL,
    iOPA_OCUID           IN PACIENTEOCUPACIONES.OPA_OCUID%TYPE := NULL)
AS
BEGIN

        INSERT INTO PACIENTEOCUPACIONES
            (OPA_PAEID,
            OPA_OCUID)
        VALUES
            (iOPA_PAEID,
            iOPA_OCUID);

END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTEOS_INSERT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTEOS_INSERT (
    iOSP_PAEID            IN PACIENTEOS.OSP_PAEID%TYPE :=NULL,
    iOSP_OSOID           IN PACIENTEOS.OSP_OSOID%TYPE := NULL,
    iOSPNROSOCIO       IN PACIENTEOS.OSPNROSOCIO%TYPE := NULL)
AS
BEGIN
           
        INSERT INTO PACIENTEOS
            (OSP_PAEID,
            OSP_OSOID,
            OSPNROSOCIO)
        VALUES
            (iOSP_PAEID,
            iOSP_OSOID,
            iOSPNROSOCIO);               

END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTEOS_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTEOS_SELECT(
    oCursorOSocial   OUT sys_refcursor)

AS
BEGIN
    
    OPEN oCursorOSocial FOR 
        SELECT  * 
        FROM    PACIENTEOS OP, OBRASOCIAL O
        WHERE  OP.OSP_OSOID = O.OSOID ;

END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTE_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTE_SELECT (
    iPsnnrodcto               IN PERSONA.PSNNRODCTO %TYPE,
    oCursorPersona          OUT sys_refcursor)
AS
BEGIN
    
    OPEN oCursorPersona FOR 
   SELECT   *
   FROM     PERSONA , PACIENTE 
   WHERE   PAE_PSNID = PSNID 
   AND       PSNNRODCTO = iPsnnrodcto
   AND       ROWNUM < 2;
END;
/


DROP PROCEDURE FISIKS.PRC_PACIENTE_UPDATE;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PACIENTE_UPDATE (
    iPAEID                     IN PACIENTE.PAEID%TYPE :=NULL,
    iPAEPESO                IN PACIENTE.PAEPESO%TYPE :=NULL,
    iPAEALTURA            IN PACIENTE.PAEALTURA%TYPE := NULL,
    iPAETENSIONMAX    IN PACIENTE.PAETENSIONMAX%TYPE :=NULL,
    iPAETENSIONMIN     IN PACIENTE.PAETENSIONMIN%TYPE :=NULL,
    iPAEACTFISICA        IN PACIENTE.PAEACTFISICA%TYPE := NULL,
    iPAEPERIODICIDAD   IN PACIENTE.PAEPERIODICIDAD%TYPE := NULL,
    iPAE_OCUID             IN PACIENTE.PAE_OCUID %TYPE := NULL,
    iPAE_PSNID             IN PACIENTE.PAE_PSNID%TYPE)
AS
BEGIN
           
        UPDATE PACIENTE SET
            PAEPESO = iPAEPESO,
            PAEALTURA = iPAEALTURA,
            PAETENSIONMAX = iPAETENSIONMAX,
            PAETENSIONMIN = iPAETENSIONMIN,
            PAEACTFISICA = iPAEACTFISICA,
            PAEPERIODICIDAD = iPAEPERIODICIDAD,
            PAE_OCUID = iPAE_OCUID,
            PAE_PSNID =iPAE_PSNID
        WHERE PAEID = iPAEID;
        
END;
/


DROP PROCEDURE FISIKS.PRC_PERSONA_INSERT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PERSONA_INSERT (
    iPSNNRODCTO       IN PERSONA.PSNNRODCTO%TYPE,
    iPSNNOMBRE         IN PERSONA.PSNNOMBRE%TYPE := NULL,
    iPSNAPELLIDO       IN PERSONA.PSNAPELLIDO%TYPE := NULL,
    iPSNFECHANAC     IN PERSONA.PSNFECHANAC%TYPE := NULL,
    iPSNTELEFONO     IN PERSONA.PSNTELEFONO%TYPE := NULL,
    iPSNSEXO            IN PERSONA.PSNSEXO%TYPE := NULL,
    iPSNDOMICILIO    IN PERSONA.PSNDOMICILIO%TYPE := NULL,
    oPSNID                 OUT NUMBER)
AS
BEGIN
           
        INSERT INTO PERSONA
            (PSNNRODCTO,
            PSNNOMBRE,
            PSNAPELLIDO,
            PSNFECHANAC,
            PSNTELEFONO,
            PSNSEXO,
            PSNDOMICILIO)
        VALUES
            (iPSNNRODCTO,
            iPSNNOMBRE,
            iPSNAPELLIDO,
            iPSNFECHANAC,
            iPSNTELEFONO,
            iPSNSEXO,
            iPSNDOMICILIO)            
            RETURNING PSNID INTO oPSNID;

END;
/


DROP PROCEDURE FISIKS.PRC_PERSONA_UPDATE;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_PERSONA_UPDATE (
    iPSNID                  IN PERSONA.PSNID%TYPE,
    iPSNNRODCTO       IN PERSONA.PSNNRODCTO%TYPE,
    iPSNNOMBRE         IN PERSONA.PSNNOMBRE%TYPE := NULL,
    iPSNAPELLIDO       IN PERSONA.PSNAPELLIDO%TYPE := NULL,
    iPSNFECHANAC     IN PERSONA.PSNFECHANAC%TYPE := NULL,
    iPSNTELEFONO      IN PERSONA.PSNTELEFONO%TYPE := NULL,
    iPSNSEXO             IN PERSONA.PSNSEXO%TYPE := NULL,
    iPSNDOMICILIO     IN PERSONA.PSNDOMICILIO%TYPE := NULL)
AS
BEGIN
           
        UPDATE PERSONA SET
            PSNNRODCTO = iPSNNRODCTO,
            PSNNOMBRE = iPSNNOMBRE,
            PSNAPELLIDO = iPSNAPELLIDO,
            PSNFECHANAC = iPSNFECHANAC,
            PSNTELEFONO = iPSNTELEFONO,
            PSNSEXO = iPSNSEXO,
            PSNDOMICILIO = iPSNDOMICILIO
        WHERE PSNID = iPSNID;

END;
/


DROP PROCEDURE FISIKS.PRC_TURNERO_DELETE;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_TURNERO_DELETE (
    iTURID IN TURNERO.TURID%TYPE )--No puede ser NULL
AS
BEGIN
           
        DELETE  FROM TURNERO WHERE TURID =  iTURID;
        
END;
/


DROP PROCEDURE FISIKS.PRC_TURNERO_INSERT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_TURNERO_INSERT (
    iTURTITULO              IN TURNERO.TURTITULO%TYPE := NULL,
    iTURDESCRIPCION     IN TURNERO.TURDESCRIPCION%TYPE := NULL,
    iTURFECHAINI            IN TURNERO.TURFECHAINI%TYPE := NULL,
    iTURFECHAFIN           IN TURNERO.TURFECHAFIN%TYPE := NULL,
    iTURTODODIA           IN TURNERO.TURTODODIA%TYPE := NULL,
    iTUR_PAEID              IN TURNERO.TUR_PAEID%TYPE := NULL,
    iTUR_PROID              IN TURNERO.TUR_PROID%TYPE := NULL,
    oTURID                     OUT NUMBER)
AS
BEGIN
           
        INSERT INTO TURNERO
            (TURTITULO,
            TURDESCRIPCION,
            TURFECHAINI,
            TURFECHAFIN,
            TURTODODIA,
            TUR_PAEID,
            TUR_PROID)
        VALUES
            (iTURTITULO,
            iTURDESCRIPCION,
            iTURFECHAINI,
            iTURFECHAFIN,
            iTURTODODIA,
            iTUR_PAEID,
            iTUR_PROID)            
            RETURNING TURID INTO oTURID;

END;
/


DROP PROCEDURE FISIKS.PRC_TURNERO_SELECT;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_TURNERO_SELECT (
    iTurFechaIni                IN TURNERO.TURFECHAINI%TYPE,
    iTurFechaFin               IN TURNERO.TURFECHAFIN%TYPE,
    oCursorTurnero          OUT sys_refcursor)
AS
BEGIN
    
    OPEN oCursorTurnero FOR 
    SELECT * 
    FROM    TURNERO
    WHERE TURFECHAINI >= iturfechaini
    AND     TURFECHAFIN <=iturfechafin;

END;
/


DROP PROCEDURE FISIKS.PRC_TURNERO_UPDATE;

CREATE OR REPLACE PROCEDURE FISIKS.PRC_TURNERO_UPDATE (
    iTURID                      IN TURNERO.TURID%TYPE,--No puede ser NULL
    iTURTITULO              IN TURNERO.TURTITULO%TYPE := NULL,
    iTURDESCRIPCION     IN TURNERO.TURDESCRIPCION%TYPE := NULL,
    iTURFECHAINI            IN TURNERO.TURFECHAINI%TYPE := NULL,
    iTURFECHAFIN           IN TURNERO.TURFECHAFIN%TYPE := NULL,
    iTURTODODIA           IN TURNERO.TURTODODIA%TYPE := NULL,
    iTUR_PAEID              IN TURNERO.TUR_PAEID%TYPE := NULL,
    iTUR_PROID              IN TURNERO.TUR_PROID%TYPE := NULL)
AS
BEGIN
           
        UPDATE TURNERO SET 
        TURTITULO = NVL(iTURTITULO ,TURTITULO),
        TURDESCRIPCION = NVL(iTURTITULO ,TURTITULO),
        TURFECHAINI = NVL(iTURFECHAINI ,TURFECHAINI),
        TURFECHAFIN = NVL(iTURFECHAFIN ,TURFECHAFIN),
        TURTODODIA = NVL(iTURTODODIA ,TURTODODIA),
        TUR_PAEID = NVL(iTUR_PAEID ,TUR_PAEID),
        TUR_PROID = NVL(iTUR_PROID ,TUR_PROID)
        WHERE TURID =  iTURID;
        
END;
/
